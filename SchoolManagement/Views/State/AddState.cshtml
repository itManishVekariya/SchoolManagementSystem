@model SchoolManagement.Models.Model.StateModel

@{
    ViewBag.Title = "AddState";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>AddState</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>StateModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.CountryFK, "Country", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CountryFK, (IEnumerable<SelectListItem>)ViewBag.Countries, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CountryFK, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
                @Html.HiddenFor(model => model.StateId)
                @Html.HiddenFor(model => model.CreatedAt)
                @Html.HiddenFor(model => model.CreatedBy)
                @Html.HiddenFor(model => model.UpdatedAt)
                @Html.HiddenFor(model => model.UpdatedBy)
                @Html.HiddenFor(model => model.DeletedAt)
                @Html.HiddenFor(model => model.DeletedBy)
                @Html.HiddenFor(model => model.IsDeleted)
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "StateList" , "State")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
